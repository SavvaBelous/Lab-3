#  вариант 10
def knapsack(W, weight, cost, n):  # кол-во ячеек, X, Y, кол-во предметов
    K = [[0 for x in range(W + 1)] for x in range(n + 1)]
    for i in range(n + 1):
        for w in range(W + 1):
            if i == 0 or w == 0:  # Проставление 0 в первом столбце и первой строке
                K[i][w] = 0
            elif weight[i - 1] <= w:
                K[i][w] = max(cost[i - 1][0] + K[i - 1][w - weight[i - 1]], K[i - 1][w])
            else:
                K[i][w] = K[i - 1][w]
    return K


stuffdict = {'в': (3, 25),
             'п': (2, 15),
             'б': (2, 15),
             'а': (2, 20),
             'и': (1, 5),
             'н': (1, 15),
             'т': (3, 20),
             'о': (1, 25),
             'ф': (1, 15),
             'д': (1, 10),
             'к': (2, 20),
             'р': (2, 20)
             }

backpack = {}

Y = []
X = []
for key in stuffdict:
    Y.append([stuffdict[key][1], key])  # Y(очки, [кол-во ячеек, очки])
    X.append(stuffdict[key][0])  # X(кол-во ячеек)
"""
# отладка
print("X: ", X)
print("Y: ", Y)
# отладка
"""
W = 9  # рюкзак
n = len(Y)  # кол-во предметов
K = knapsack(W, X, Y, n)  # кол-во ячеек, X, Y, кол-во предметов
"""
# отладка
for e in K:
    print(e)
# отладка
"""
w, i, total_weight = W, n, 0  # Слотов рюкзака, кол-во предметов, Суммарный вес
res = K[n][W]  # Суммарные очки выживания
while i > 0 and res > 0:  # Заполнение рюкзака(словаря)
    if res != K[i - 1][w]:  # Двигаемся с правого нижнего угла таблицы, по  текущему итоговому весу определяем
        # из каких элементов этот вес скаладывается
        backpack[Y[i - 1][1]] = [Y[i - 1][0], X[i - 1]]  # Добавление эл-та в рюкзак
        stuffdict.pop(Y[i - 1][1])  # Очищаем словарь от буквы предмета, чтобы запомнить что мы НЕ взяли
        total_weight += X[i - 1]  # Увеличиваем итоговый вес на вес предмета
        res -= Y[i - 1][0]  # Забираем от итоговых очков очки предмета, который мы взяли с собой
        w -= X[i - 1]  # Количество слотов рюкзака уменьшилось на вес предмета
        """print(backpack, total_weight, res, w)""" # отладка
    i -= 1
"""
# отладка
print(backpack)
print(res)
# отладка
"""
L = 0
for key in backpack: # Вывод рюкзака на экран
    for k in range(backpack[key][1]):
        if L == 3:
            print("\b\b")
            L = 0
        print(key, end=', ')
        L += 1

print()

start = 10
s = 0
for key in stuffdict:
    s += stuffdict[key][1]


print("Итоговые очки выживания: ", K[n][W] - s + start)

# Допзадание
# При замене W = 7 в 42 строке итоговое количество очков -5, т.к это и так оптимальный набор, то никаких комбинаций 
# вещей с большим итоговым счётом не будет
